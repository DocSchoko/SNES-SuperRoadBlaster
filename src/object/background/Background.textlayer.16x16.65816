/**
* highscore display for hall of fame
* 
*/
.include "src/object/background/Background.textlayer.16x16.h"
.section "Background.textlayer.16x16"

  METHOD init
  rep #$31

  jsr _allocateMemory

  jsr _uploadFont

;  jsr _printHighscores
  jsr core.string.reset
  jsr _stringToTilemap
  jsr abstract.Background.uploadTilemap

  lda.b this.bg
  jsr abstract.Background.makePhysical

  rts

_allocateMemory:
  php
  sep #$20
  lda #BG.LAYER.1
  sta.b this.bg

  lda.b #PALETTE.BPP.4
  sta animation.tiles.bpp

  rep #$31
  lda.w #Font16x16Tiles.LEN
  sta animation.tiles.length
  lda.w #Font16x16Pal.LEN
  sta animation.palette.length
  lda.w #TILEMAP.SIZE.SINGLE
  sta animation.tilemap.length
  sta animation.frame.tilemap.length

  jsr abstract.Background.allocateMemory

  plp
  rts

_uploadFont:
  php
  sep #$20
  tsx
  lda #DMA_TRANSFER.VRAM	;transfer type
  pha
  pea Font16x16Tiles
  lda.b #:Font16x16Tiles		;source bank
  pha
  rep #$31

  pei (animation.tiles.start)
  pea Font16x16Tiles.LEN

  jsr core.dma.registerTransfer

;  tsx

  sep #$20
  lda #DMA_TRANSFER.CGRAM	;transfer type
  pha
;  phy
  pea Font16x16Pal
  lda.b #:Font16x16Pal		;source bank
  pha
  rep #$31

  pei (animation.palette.start)
  pea Font16x16Pal.LEN

  jsr core.dma.registerTransfer
;  txs
  txs
  plp
  rts

_stringToTilemap:
  php
  rep #$31

  ldx #0
  ldy animation.ramBuffer.start

  ;pha
  
;GLOBAL.CORE.STRING.buffer.length
-	lda.w GLOBAL.CORE.STRING.buffer,x
	and.w #$ff
	sec
	sbc.w #$20	;shift back, whitespace starts at char 0 instead of $20
    asl a   ;double width
    asl a   ;double height
	ora.w #BG.FORMAT.PRIORITY	;set priority
    ;sta 1,s

	sta.w GLOBAL.wramBuffer.start,y
    inc a
    sta.w (GLOBAL.wramBuffer.start & $ffff) +2,y
	inc a
	/*
	;super bad hack!!
    lda 1,s
    clc
	adc.w #((Font16x16Tiles.LEN/32)/4)*2    ;assume that font consists of 2 4bpp-tile-rows
	;adc.w #96*2
	*/
    sta.w (GLOBAL.wramBuffer.start & $ffff)+(32*2),y  ;write to tilemap line below
    inc a
    sta.w (GLOBAL.wramBuffer.start & $ffff)+(32*2)+2,y
    
    ;move to next char in tilemap buffer
    tya
    clc
    adc.w #4
    
    ;skip every other line, 16 pixel char height
    bit.w #32*2
    beq +
      clc
      adc.w #32*2
+    
    tay

    inx	
	cpx.w #GLOBAL.CORE.STRING.buffer.length
	bne -

;  pla
  plp
  rts

  METHOD play
;  jsr abstract.Background.playAnimation
  rts

  METHOD kill
  rep #$31
  jsr abstract.Background.deallocate
  lda #OBJR_kill
  sta 3,s	
  rts

  METHOD clear
  rep #$31
  jsr core.string.reset
  rts

  METHOD print
  rep #$31
  jsr core.string.parse_from_object
  rts

  METHOD flush
  rep #$31
  jsr _stringToTilemap
  jsr abstract.Background.uploadTilemap
  rts

  CLASS Background.textlayer.16x16 clear print flush
.ends	
	
